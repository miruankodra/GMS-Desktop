<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAFiSURBVEhL7ZKhq8JAHMdfns7ixGZYEcxiWLALgoL/wFZM
        q2tWwbI4sFhtVoP+AVosZotufTAtso3v4+7dncg93yY+mx/4we2+v/t9GHdfiqLgnfURZJYQdLtdHI9H
        vMrpdKKzJMF0OmUtrzOZTGRBsViEbduIooi1PU8YhnRGoVCQBbx0Xcd8PmdH8rNYLFCr1e5mkRKC1WqF
        wWAgArLOcyeHwwGdTkecsywLu91OfAsBZ7lcol6v071yuYzxeIzr9crSG3Ecw/M8VCoV2ttoNLBer1mK
        xwLC5XLBaDSCqqo0a7Va2G63LAU2mw2azSbNSqUSHMfB+Xxm6Q987q8CDvlVwzBoTh6BaZq0yJrstdtt
        7Pd71n0Pn/ungJCmKWazGarVqjikaRpc10WSJKxLhvdmCji+72M4HNIKgoDtPuZpwbN8BJlIgjwXlxfy
        ICRBv9//FwkZ3uv1ZMG76iPIKAXf43KJIRTSDKIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAALHSURBVEhL7VbPSypRFH4baSdWUkFQErkroo1RQS1MNyYu
        BLXW2V8gFi6F/oHatWutG8t9f4CKSrTIVWBRgkk/RIikE99xRu/M3J6Tvcd7D94HHwznO+d83HPv3Jkf
        FouF/gT/DePJyUk6ODigUqlEzWaTarUanZ+fUywWo9HRUWnNZzRtHA6H6fn5mT7D/f09+Xw+aa2Mpoxh
        +v7+zgaZTIbcbjfZbDbmxsYGnZ6esvb29kaBQEDaQ8++xhivutL9/X1pDphIJDin0WjQxMSENEdkX2Ps
        KYCVynSR2WyWc5PJpFQX2de4XC5zM4xXpov0eDycWywWpbrIvsYvLy/cbHh4WKqLHBkZ4VzUyHSRfY1V
        yDQZVcg0kX+PMV6H29tbpfz7uLm5Ib/fr/EADcZI/NWoVqsaD9Bg/Lug9/lvrKSZR6vVonQ6Tdvb27Sw
        sMBfKavVSrOzs7S1tUVnZ2fUbrc1HuDAxmh2fHxMU1NTmnoZHQ6HITaQ8d3dHXm93m7N0tISHR0d0cXF
        BT0+PjLxfHh4SC6XS9Nf5ZeNK5UKzczMcO709DSPuR9SqZRhMl8yvr6+7jZYX1/nj78KvKuhUIjvazAY
        DNLV1ZWidqa0trbW9TFtjEO0uLjIOaurq5q/EZiOj49r+oBjY2OsqUDNysoKa6aN9/b2WJ+fn6eHhwcl
        2gFWCk29bsVrMhKJKFkd1Ot1mpubM2+s/lXk83kl0gNGC028btVrEq+XHrlc7uvGhUJBifTwM2O73a5E
        ekAPg/FnH4l4PM469uj19VWJdoCDBA3jRT1MNzc3OYZLRARql5eXjcZqsR74q3A6nZwTjUa7f50ATi8O
        kr4XpiT2Qs3Ozg5rBmOz3N3d1awcq8RBwp6CWKloilzUqPUDG4MYu+yw6YEcjFes/ZYxODQ0xNtzcnJC
        l5eX9PT0xMQzYthr5GjrLPQBtXnYGKifup0AAAAASUVORK5CYII=
</value>
  </data>
</root>